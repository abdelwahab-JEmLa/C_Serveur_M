Index: coupeaudioai/src/main/java/com/example/Z_Learn/AndriodStatsApp/LearnWellnessViewModel.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/coupeaudioai/src/main/java/com/example/Z_Learn/AndriodStatsApp/LearnWellnessViewModel.kt b/coupeaudioai/src/main/java/com/example/Z_Learn/AndriodStatsApp/LearnWellnessViewModel.kt
deleted file mode 100644
--- a/coupeaudioai/src/main/java/com/example/Z_Learn/AndriodStatsApp/LearnWellnessViewModel.kt	(revision 3bf54175a72f8ab22aadcb1a722ee20b267e0de1)
+++ /dev/null	(revision 3bf54175a72f8ab22aadcb1a722ee20b267e0de1)
@@ -1,61 +0,0 @@
-package com.example.Z_Learn.AndriodStatsApp
-
-import androidx.compose.runtime.toMutableStateList
-import androidx.lifecycle.ViewModel
-import androidx.lifecycle.viewModelScope
-import com.google.firebase.database.ktx.database
-import com.google.firebase.ktx.Firebase
-import kotlinx.coroutines.Dispatchers
-import kotlinx.coroutines.launch
-import kotlinx.coroutines.tasks.await
-
-class LearnWellnessViewModel : ViewModel() {
-    private val database = Firebase.database
-    private val refFirebase = database.getReference("tasks")
-    private val _tasks = mutableListOf<WellnessTask>().toMutableStateList()
-    val tasks: List<WellnessTask>
-        get() = _tasks
-
-    init {
-        importFromFirebase()
-    }
-
-    fun remove(item: WellnessTask) {
-        _tasks.remove(item)
-        syncWithFirebase(item, true)
-    }
-
-    fun changeTaskChecked(item: WellnessTask, checked: Boolean) {
-        _tasks.find { it.id == item.id }?.let { task ->
-            task.checked = checked
-            syncWithFirebase(task)
-        }
-    }
-
-    fun importFromFirebase() {
-        viewModelScope.launch(Dispatchers.IO) {
-            val dataSnapshot = refFirebase.get().await()
-            val tasksFromFirebase = dataSnapshot.children.mapNotNull { it.getValue(WellnessTask::class.java) }
-            _tasks.clear()
-            _tasks.addAll(tasksFromFirebase)
-        }
-    }
-
-    private fun syncWithFirebase(task: WellnessTask, remove: Boolean = false) {
-        val taskRef = refFirebase.child(task.id.toString())
-        if (remove) {
-            taskRef.removeValue()
-        } else {
-            taskRef.setValue(task)
-        }
-    }
-
-    fun syncInitialTasksWithFirebase() {
-        viewModelScope.launch(Dispatchers.IO) {
-            val initialTasks = List(30) { i -> WellnessTask(i + 1, "Task #${i + 1}") }
-            initialTasks.forEach { syncWithFirebase(it) }
-            _tasks.clear()
-            _tasks.addAll(initialTasks)
-        }
-    }
-}
Index: coupeaudioai/src/main/java/com/example/Z_Learn/AndriodStatsApp/WaterCounter.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/coupeaudioai/src/main/java/com/example/Z_Learn/AndriodStatsApp/WaterCounter.kt b/coupeaudioai/src/main/java/com/example/Z_Learn/AndriodStatsApp/WaterCounter.kt
deleted file mode 100644
--- a/coupeaudioai/src/main/java/com/example/Z_Learn/AndriodStatsApp/WaterCounter.kt	(revision 3bf54175a72f8ab22aadcb1a722ee20b267e0de1)
+++ /dev/null	(revision 3bf54175a72f8ab22aadcb1a722ee20b267e0de1)
@@ -1,39 +0,0 @@
-package com.example.Z_Learn.AndriodStatsApp
-
-import androidx.compose.foundation.layout.Column
-import androidx.compose.foundation.layout.padding
-import androidx.compose.material3.Button
-import androidx.compose.material3.Text
-import androidx.compose.runtime.Composable
-import androidx.compose.runtime.getValue
-import androidx.compose.runtime.mutableIntStateOf
-import androidx.compose.runtime.saveable.rememberSaveable
-import androidx.compose.runtime.setValue
-import androidx.compose.ui.Modifier
-import androidx.compose.ui.unit.dp
-
-@Composable
-fun StatefulCounter(modifier: Modifier = Modifier) {
-    var count by rememberSaveable { mutableIntStateOf(0) }
-    StatelessCounter(
-        count = count,
-        onIncrement = { count++ },
-        modifier = modifier
-    )
-}
-
-@Composable
-fun StatelessCounter(count: Int, onIncrement: () -> Unit, modifier: Modifier = Modifier) {
-    Column(modifier = modifier.padding(16.dp)) {
-        if (count > 0) {
-            Text("You've had $count glasses.")
-        }
-        Button(
-            onClick = onIncrement,
-            enabled = count < 10,
-            modifier = Modifier.padding(top = 8.dp)
-        ) {
-            Text("Add one")
-        }
-    }
-}
Index: coupeaudioai/src/main/java/com/example/Z_Learn/AndriodStatsApp/WellnessScreen.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/coupeaudioai/src/main/java/com/example/Z_Learn/AndriodStatsApp/WellnessScreen.kt b/coupeaudioai/src/main/java/com/example/Z_Learn/AndriodStatsApp/WellnessScreen.kt
deleted file mode 100644
--- a/coupeaudioai/src/main/java/com/example/Z_Learn/AndriodStatsApp/WellnessScreen.kt	(revision 3bf54175a72f8ab22aadcb1a722ee20b267e0de1)
+++ /dev/null	(revision 3bf54175a72f8ab22aadcb1a722ee20b267e0de1)
@@ -1,34 +0,0 @@
-package com.example.Z_Learn.AndriodStatsApp
-
-import androidx.compose.foundation.layout.Column
-import androidx.compose.foundation.layout.fillMaxSize
-import androidx.compose.runtime.Composable
-import androidx.compose.ui.Modifier
-import androidx.compose.ui.tooling.preview.Preview
-import androidx.lifecycle.viewmodel.compose.viewModel
-
-@Composable
-fun WellnessScreen(
-    modifier: Modifier = Modifier,
-    wellnessViewModel: WellnessViewModel = viewModel()
-) {
-    Column(modifier = modifier.fillMaxSize()) {
-        StatefulCounter()
-
-        WellnessTasksList(
-            list = wellnessViewModel.tasks,
-            onCheckedTask = { task, checked ->
-                wellnessViewModel.changeTaskChecked(task, checked)
-            },
-            onCloseTask = { task ->
-                wellnessViewModel.remove(task)
-            }
-        )
-    }
-}
-
-@Preview
-@Composable
-private fun Preview() {
-    WellnessScreen(modifier = Modifier.fillMaxSize())
-}
Index: coupeaudioai/src/main/java/com/example/Z_Learn/AndriodStatsApp/WellnessTask.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/coupeaudioai/src/main/java/com/example/Z_Learn/AndriodStatsApp/WellnessTask.kt b/coupeaudioai/src/main/java/com/example/Z_Learn/AndriodStatsApp/WellnessTask.kt
deleted file mode 100644
--- a/coupeaudioai/src/main/java/com/example/Z_Learn/AndriodStatsApp/WellnessTask.kt	(revision 3bf54175a72f8ab22aadcb1a722ee20b267e0de1)
+++ /dev/null	(revision 3bf54175a72f8ab22aadcb1a722ee20b267e0de1)
@@ -1,13 +0,0 @@
-package com.example.Z_Learn.AndriodStatsApp
-
-import androidx.compose.runtime.getValue
-import androidx.compose.runtime.mutableStateOf
-import androidx.compose.runtime.setValue
-
-class WellnessTask(
-    val id: Int,
-    val label: String,
-    initialChecked: Boolean = false
-) {
-    var checked: Boolean by mutableStateOf(initialChecked)
-}
Index: coupeaudioai/src/main/java/com/example/Z_Learn/AndriodStatsApp/WellnessTasksList.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/coupeaudioai/src/main/java/com/example/Z_Learn/AndriodStatsApp/WellnessTasksList.kt b/coupeaudioai/src/main/java/com/example/Z_Learn/AndriodStatsApp/WellnessTasksList.kt
deleted file mode 100644
--- a/coupeaudioai/src/main/java/com/example/Z_Learn/AndriodStatsApp/WellnessTasksList.kt	(revision 3bf54175a72f8ab22aadcb1a722ee20b267e0de1)
+++ /dev/null	(revision 3bf54175a72f8ab22aadcb1a722ee20b267e0de1)
@@ -1,75 +0,0 @@
-package com.example.Z_Learn.AndriodStatsApp
-
-import androidx.compose.foundation.layout.Row
-import androidx.compose.foundation.layout.padding
-import androidx.compose.foundation.lazy.LazyColumn
-import androidx.compose.foundation.lazy.items
-import androidx.compose.material.icons.Icons
-import androidx.compose.material.icons.filled.Close
-import androidx.compose.material3.Checkbox
-import androidx.compose.material3.Icon
-import androidx.compose.material3.IconButton
-import androidx.compose.material3.Text
-import androidx.compose.runtime.Composable
-import androidx.compose.ui.Alignment
-import androidx.compose.ui.Modifier
-import androidx.compose.ui.unit.dp
-
-@Composable
-fun WellnessTasksList(
-    list: List<WellnessTask>,
-    onCheckedTask: (WellnessTask, Boolean) -> Unit,
-    onCloseTask: (WellnessTask) -> Unit,
-    modifier: Modifier = Modifier
-) {
-    LazyColumn(
-        modifier = modifier
-    ) {
-        items(
-            items = list,
-            /**
-             * Use key param to define unique keys representing the items in a mutable list,
-             * instead of using the default key (list position). This prevents unnecessary
-             * recompositions.
-             */
-            key = { task -> task.id }
-        ) { task ->
-            WellnessTaskItem(
-                taskName = task.label,
-                checked = task.checked,
-                onCheckedChange = { checked -> onCheckedTask(task, checked) },
-                onClose = { onCloseTask(task) }
-            )
-        }
-    }
-}
-
-@Composable
-fun WellnessTaskItem(
-    taskName: String,
-    checked: Boolean,
-    onCheckedChange: (Boolean) -> Unit,
-    onClose: () -> Unit,
-    modifier: Modifier = Modifier
-) {
-    Row(
-        modifier = modifier,
-        verticalAlignment = Alignment.CenterVertically
-    ) {
-        Text(
-            modifier = Modifier
-                .weight(1f)
-                .padding(start = 16.dp),
-            text = taskName
-        )
-        Checkbox(
-            checked = checked,
-            onCheckedChange = onCheckedChange
-        )
-        IconButton(onClick = onClose) {
-            Icon(Icons.Filled.Close, contentDescription = "Close")
-        }
-    }
-}
-
-
Index: coupeaudioai/src/main/java/com/example/Z_Learn/AndriodStatsApp/WellnessViewModel.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/coupeaudioai/src/main/java/com/example/Z_Learn/AndriodStatsApp/WellnessViewModel.kt b/coupeaudioai/src/main/java/com/example/Z_Learn/AndriodStatsApp/WellnessViewModel.kt
deleted file mode 100644
--- a/coupeaudioai/src/main/java/com/example/Z_Learn/AndriodStatsApp/WellnessViewModel.kt	(revision 3bf54175a72f8ab22aadcb1a722ee20b267e0de1)
+++ /dev/null	(revision 3bf54175a72f8ab22aadcb1a722ee20b267e0de1)
@@ -1,61 +0,0 @@
-package com.example.Z_Learn.AndriodStatsApp
-
-import androidx.compose.runtime.toMutableStateList
-import androidx.lifecycle.ViewModel
-import androidx.lifecycle.viewModelScope
-import com.google.firebase.database.ktx.database
-import com.google.firebase.ktx.Firebase
-import kotlinx.coroutines.Dispatchers
-import kotlinx.coroutines.launch
-import kotlinx.coroutines.tasks.await
-
-class WellnessViewModel : ViewModel() {
-    private val database = Firebase.database
-    private val refFirebase = database.getReference("tasks")
-
-    private val _tasks = mutableListOf<WellnessTask>().toMutableStateList()
-    val tasks: List<WellnessTask> get() = _tasks
-
-    init {
-        syncInitialTasksWithFirebase()
-    }
-
-    fun remove(item: WellnessTask) {
-        _tasks.remove(item)
-        syncWithFirebase(item, true)
-    }
-
-    fun changeTaskChecked(item: WellnessTask, checked: Boolean) {
-        _tasks.find { it.id == item.id }?.let { task ->
-            task.checked = checked
-            syncWithFirebase(task)
-        }
-    }
-
-    private fun importFromFirebase() {
-        viewModelScope.launch(Dispatchers.IO) {
-            val dataSnapshot = refFirebase.get().await()
-            val tasksFromFirebase = dataSnapshot.children.mapNotNull { it.getValue(WellnessTask::class.java) }
-            _tasks.clear()
-            _tasks.addAll(tasksFromFirebase)
-        }
-    }
-
-    private fun syncWithFirebase(task: WellnessTask, remove: Boolean = false) {
-        val taskRef = refFirebase.child(task.id.toString())
-        if (remove) {
-            taskRef.removeValue()
-        } else {
-            taskRef.setValue(task)
-        }
-    }
-
-    fun syncInitialTasksWithFirebase() {
-        viewModelScope.launch(Dispatchers.IO) {
-            val initialTasks = List(30) { i -> WellnessTask(i + 1, "Task #${i + 1}") }
-            initialTasks.forEach { syncWithFirebase(it) }
-            _tasks.clear()
-            _tasks.addAll(initialTasks)
-        }
-    }
-}
